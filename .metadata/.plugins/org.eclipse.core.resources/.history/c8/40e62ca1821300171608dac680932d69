package core;
import static org.lwjgl.glfw.GLFW.GLFW_KEY_W;
import static org.lwjgl.glfw.GLFW.glfwPollEvents;
import static org.lwjgl.glfw.GLFW.glfwTerminate;
import static org.lwjgl.opengl.GL11.GL_COLOR_BUFFER_BIT;
import static org.lwjgl.opengl.GL11.GL_TEXTURE_2D;
import static org.lwjgl.opengl.GL11.glClear;
import static org.lwjgl.opengl.GL11.glEnable;

import java.util.ArrayList;
import java.util.List;

import org.joml.Vector2f;
import org.joml.Vector3f;

import entities.Entity;
import renderers.DefaultRenderer;
import time.Time;

public class Main {

	public static final int WIDTH = 640;
	public static final int HEIGHT = 480;
	public static final String TITLE = "Window";
	
	public static void main(String[] args){
		new Main();
	}
	
	public Main(){
		Window window = new Window(WIDTH, HEIGHT, TITLE);
		
		Texture texture = new Texture("./res/img.png");
		
		DefaultRenderer renderer = new DefaultRenderer();
		
		Camera cam = new Camera(window.getWidth(), window.getHeight());
		
		List<Entity> entities = new ArrayList<Entity>();
		
		entities.add(new Entity(new Vector2f(0,0), new Vector2f(256,256), texture));
		
		glEnable(GL_TEXTURE_2D);
		
		new Timer(()->(System.out.println("Test");), 1.0, 3);
		
		while(!window.shouldClose()){
			Time.update();
			if(window.getKey(GLFW_KEY_W)){
				cam.addPos(new Vector3f(0,-.1f,0));
			}
			
			glfwPollEvents();
			glClear(GL_COLOR_BUFFER_BIT);

			
			renderer.render(entities, cam);
			
			window.swapBuffers();
		}
		cleanUp();
	}
	
	private void cleanUp(){
		glfwTerminate();
	}
	
}
